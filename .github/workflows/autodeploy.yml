name: Auto Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches:
      - master
    types: [closed]


jobs:
  deploy:
#     if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: 'master'
        fetch-depth: 1
    - uses: appleboy/ssh-action@v0.1.4
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        username: ${{ secrets.USERNAME }}
        host: ${{ secrets.HOST }}
        script: |
          cd ${{ secrets.PROJECT_PATH }}

          git fetch origin master

          if [ $(git log --format="%H" HEAD -1) == $(git log --format="%H" FETCH_HEAD -1) ]; then
            echo "No changes from the upstream."
            exit 0
          fi

          git diff --pretty=%gd --stat HEAD FETCH_HEAD | grep -q client/
          clientExitCode=$?

          git diff --pretty=%gd --stat HEAD FETCH_HEAD | grep -q server/
          serverExitCode=$?
          
          # Make sure to also update the top of the `master` branch.
          # When updating the client/server, the local `master` branch
          # must be up to date.
          git merge HEAD origin/master

          if [ clientExitCode == 0 ]; then
              echo "Updating 'client'."
              npm run build
          fi

          if [ serverExitCode == 0 ]; then
              echo "Updating 'server'."
              docker-compose -f docker-compose.prod.yml --env-file ./server/.env -p "$(basename $(pwd))_PROD" restart server
          fi


